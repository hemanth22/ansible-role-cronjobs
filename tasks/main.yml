---
- name: Check if directory exists
  ansible.builtin.stat:
    path: "{{ backup_dir }}"
  register: dir_stat
  tags:
    - deploy
    - rollback

- name: Show result if directory exists
  ansible.builtin.debug:
    msg: "Directory exists at {{ backup_dir }}"
  when: dir_stat.stat.exists and dir_stat.stat.isdir
  tags:
    - deploy
    - rollback

- name: Ensure to create "{{ backup_dir }}" directory"
  ansible.builtin.file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '0755'
  when: not dir_stat.stat.exists
  tags:
    - deploy
    - rollback

- name: Get the hostname
  ansible.builtin.shell: hostname
  register: custom_hostname
  tags:
    - deploy
    - rollback
    - deploy_uvt
    - rollback_uvt

- name: check existence of deployment before file
  ansible.builtin.stat:
    path: "{{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_before.txt"
  register: deploy_before_stat
  tags:
    - deploy

- name: check existence of deployment after file
  ansible.builtin.stat:
    path: "{{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_after.txt"
  register: deploy_after_stat
  tags:
    - deploy

- name: check existence of rollback before file
  ansible.builtin.stat:
    path: "{{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_before.txt"
  register: rollback_before_stat
  tags:
    - rollback

- name: check existence of rollback after file
  ansible.builtin.stat:
    path: "{{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_after.txt"
  register: rollback_after_stat
  tags:
    - rollback

- name: Run crontab -l and allow errors
  ansible.builtin.command: crontab -l
  register: crontab_output
  failed_when: false
  tags:
    - deploy
    - rollback

- name: Save crontab output to file (even if empty) for before deployment
  ansible.builtin.copy:
    content: "{{ crontab_output.stdout | default('# No crontab for this user\n', True) + '\n' }}"
    dest: "{{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_before.txt"
    mode: '0644'
  when: not deploy_before_stat.stat.exists
  tags:
    - deploy

- name: Failure message if saving crontab failed for before deployment file
  ansible.builtin.fail:
    msg: >-
      Custom Error: Failed to save crontab output because the file
      {{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_before.txt already exists.
  when:
    - deploy_before_stat.stat.exists
  tags:
    - deploy

- name: Save crontab output to file (even if empty) for before rollback
  ansible.builtin.copy:
    content: "{{ crontab_output.stdout | default('# No crontab for this user\n', True) + '\n' }}"
    dest: "{{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_before.txt"
    mode: '0644'
  when: not rollback_before_stat.stat.exists
  tags:
    - rollback

- name: Failure message if saving crontab failed for before rollback file
  ansible.builtin.fail:
    msg: >-
      Custom Error: Failed to save crontab output because the file
      {{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_before.txt already exists.
  when:
    - rollback_before_stat.stat.exists
  tags:
    - rollback

- name: Creates a cron job
  ansible.builtin.cron:
    name: "{{ CRON_JOBNAME }}"
    minute: "{{ CRON_MINUTE }}"
    hour: "{{ CRON_HOUR }}"
    day: "{{ CRON_DAY }}"
    month: "{{ CRON_MONTH }}"
    weekday: "{{ CRON_WEEKDAY }}"
    user: "{{ CRON_USER }}"
    job: "{{ CRON_JOB}}"
    state: present
  when: not deploy_before_stat.stat.exists and not deploy_after_stat.stat.exists
  tags:
    - deploy

- name: Removes a cron job
  ansible.builtin.cron:
    name: "{{ CRON_JOBNAME }}"
    minute: "{{ CRON_MINUTE }}"
    hour: "{{ CRON_HOUR }}"
    day: "{{ CRON_DAY }}"
    month: "{{ CRON_MONTH }}"
    weekday: "{{ CRON_WEEKDAY }}"
    user: "{{ CRON_USER }}"
    job: "{{ CRON_JOB}}"
    state: absent
  when: not rollback_before_stat.stat.exists and not rollback_after_stat.stat.exists
  tags:
    - rollback

- name: Post Deployment Verification
  ansible.builtin.command: crontab -l
  register: cronjobafter
  ignore_errors: true
  tags:
    - deploy
    - rollback

- name: Save crontab output to file (even if empty) for after deployment
  ansible.builtin.copy:
    content: "{{ cronjobafter.stdout | default('# No crontab for this user\n', True) + '\n' }}"
    dest: "{{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_after.txt"
    mode: '0644'
  when: not deploy_after_stat.stat.exists
  tags:
    - deploy

- name: Failure message if saving crontab failed for after deployment file
  ansible.builtin.fail:
    msg: >-
      Custom Error: Failed to save crontab output because the file
      {{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_after.txt already exists.
  when:
    - deploy_after_stat.stat.exists
  tags:
    - deploy

- name: Save crontab output to file (even if empty) for after rollback
  ansible.builtin.copy:
    content: "{{ cronjobafter.stdout | default('# No crontab for this user\n', True) + '\n' }}"
    dest: "{{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_after.txt"
    mode: '0644'
  when: not rollback_after_stat.stat.exists
  tags:
    - rollback

- name: Failure message if saving crontab failed for after rollback file
  ansible.builtin.fail:
    msg: >-
      Custom Error: Failed to save crontab output because the file
      {{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_after.txt already exists.
  when:
    - rollback_after_stat.stat.exists
  tags:
    - rollback

- name: sdiff backup deploy_crontab before and after
  ansible.builtin.shell: |
    sdiff "{{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_before.txt" \
          "{{ backup_dir }}/deploy_crontab_{{ custom_hostname.stdout }}_after.txt"
  register: deploy_sdiff_output
  ignore_errors: true
  tags:
    - deploy
    - deploy_uvt

- name: Show sdiff output for deploy_crontab
  ansible.builtin.debug:
    var: "{{ deploy_sdiff_output.stdout_lines | join('\n') }}"
  tags:
    - deploy
    - deploy_uvt

- name: sdiff backup rollback_crontab before and after
  ansible.builtin.shell: |
    sdiff "{{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_before.txt" \
          "{{ backup_dir }}/rollback_crontab_{{ custom_hostname.stdout }}_after.txt"
  register: rollback_sdiff_output
  ignore_errors: true
  tags:
    - rollback
    - rollback_uvt

- name: Show sdiff output for rollback_crontab
  ansible.builtin.debug:
    var: "{{ rollback_sdiff_output.stdout_lines | join('\n') + '\n'  }}"
  tags:
    - rollback
    - rollback_uvt
